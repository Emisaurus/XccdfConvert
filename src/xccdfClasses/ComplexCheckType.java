//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.09.06 at 04:58:26 PM CDT 
//


package xccdfClasses;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;


/**
 *  The type for an element that contains a boolean
 *                 combination of <xccdf:checks>. This element can have only
 *                 <xccdf:complex-check> and <xccdf:check> elements as children. Child
 *                 elements may appear in any order but at least one child element must be present. It
 *                 has two attributes, @operator and @negate, which dictate how <xccdf:check> or
 *                 <xccdf:complex-check> child elements are to be combined. Truth tables for
 *                 these operations appear below. 
 * 
 * <p>Java class for complexCheckType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="complexCheckType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice maxOccurs="unbounded">
 *         &lt;element name="check" type="{http://checklists.nist.gov/xccdf/1.2}checkType"/>
 *         &lt;element name="complex-check" type="{http://checklists.nist.gov/xccdf/1.2}complexCheckType"/>
 *       &lt;/choice>
 *       &lt;attribute name="operator" use="required" type="{http://checklists.nist.gov/xccdf/1.2}ccOperatorEnumType" />
 *       &lt;attribute name="negate" type="{http://www.w3.org/2001/XMLSchema}boolean" default="0" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "complexCheckType", propOrder = {
    "checkOrComplexCheck"
})
public class ComplexCheckType {

    @XmlElements({
        @XmlElement(name = "check", type = CheckType.class),
        @XmlElement(name = "complex-check", type = ComplexCheckType.class)
    })
    protected List<Object> checkOrComplexCheck;
    @XmlAttribute(name = "operator", required = true)
    protected CcOperatorEnumType operator;
    @XmlAttribute(name = "negate")
    protected Boolean negate;

    /**
     * Gets the value of the checkOrComplexCheck property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the checkOrComplexCheck property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCheckOrComplexCheck().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CheckType }
     * {@link ComplexCheckType }
     * 
     * 
     */
    public List<Object> getCheckOrComplexCheck() {
        if (checkOrComplexCheck == null) {
            checkOrComplexCheck = new ArrayList<Object>();
        }
        return this.checkOrComplexCheck;
    }

    /**
     * Gets the value of the operator property.
     * 
     * @return
     *     possible object is
     *     {@link CcOperatorEnumType }
     *     
     */
    public CcOperatorEnumType getOperator() {
        return operator;
    }

    /**
     * Sets the value of the operator property.
     * 
     * @param value
     *     allowed object is
     *     {@link CcOperatorEnumType }
     *     
     */
    public void setOperator(CcOperatorEnumType value) {
        this.operator = value;
    }

    /**
     * Gets the value of the negate property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isNegate() {
        if (negate == null) {
            return false;
        } else {
            return negate;
        }
    }

    /**
     * Sets the value of the negate property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setNegate(Boolean value) {
        this.negate = value;
    }

}
